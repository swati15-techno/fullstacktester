<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a7972a70-f123-4f25-ae13-3767ac11a15e" created="3.30.0" activeEnvironment="Default environment" name="Project 2" resourceRoot="" updated="3.30.0 2022-03-16T13:04:41Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="7eea37fa-3a50-4ee6-b66a-e49406542098" name="Swagger Petstore" type="rest_ex" wadlVersion="https://swagger.io/swagger2/specification" definitionUrl="https://petstore.swagger.io/v2/swagger.json" basePath="/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="https://petstore.swagger.io/v2/swagger.json">
      <con:part>
        <con:url>https://petstore.swagger.io/v2/swagger.json</con:url>
        <con:content>{"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.6","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value >= 1 and &lt;= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithArrayInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string"},{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{"X-Expires-After":{"type":"string","format":"date-time","description":"date in UTC when token expires"},"X-Rate-Limit":{"type":"integer","format":"int32","description":"calls per hour allowed by the user"}},"schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"}}}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","description":"","operationId":"logoutUser","produces":["application/json","application/xml"],"parameters":[],"responses":{"default":{"description":"successful operation"}}}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"default":{"description":"successful operation"}}}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"},"petstore_auth":{"type":"oauth2","authorizationUrl":"https://petstore.swagger.io/oauth/authorize","flow":"implicit","scopes":{"read:pets":"read your pets","write:pets":"modify pets in your account"}}},"definitions":{"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"xml":{"name":"tag"},"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}</con:content>
        <con:type>https://swagger.io/swagger2/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>http://petstore.swagger.io</con:endpoint>
      <con:endpoint>https://petstore.swagger.io</con:endpoint>
    </con:endpoints>
    <con:resource name="/user/{username}" path="/user/{username}" id="4b3b9ca6-947b-481c-b900-1632a46b6027">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>username</con:name>
          <con:style>TEMPLATE</con:style>
          <con:description>The name that needs to be deleted</con:description>
        </con:parameter>
      </con:parameters>
      <con:method name="getUserByName" id="721bda3f-405c-40b3-b444-74a68d9387d8" method="GET">
        <con:description>Get user by user name</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "username" : "string",
  "firstName" : "string",
  "lastName" : "string",
  "email" : "string",
  "password" : "string",
  "phone" : "string",
  "userStatus" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent><![CDATA[<User>
   <id>0</id>
   <username>string</username>
   <firstName>string</firstName>
   <lastName>string</lastName>
   <email>string</email>
   <password>string</password>
   <phone>string</phone>
   <userStatus>0</userStatus>
</User>]]></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="9c3e2608-e48e-449c-8fb8-650601988891" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:request/>
          <con:originalUri>https://petstore.swagger.io/v2/user/Swati</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="username" value="Swati"/>
          </con:parameters>
        </con:request>
      </con:method>
      <con:method name="updateUser" id="9dacc218-4987-4bf6-86e7-96590c0ec59a" method="PUT">
        <con:description>This can only be done by the logged in user.
Updated user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "username" : "string",
  "firstName" : "string",
  "lastName" : "string",
  "email" : "string",
  "password" : "string",
  "phone" : "string",
  "userStatus" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="7deeb334-846c-409d-80d7-561c11cff8bd" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:request>{\r
  "id" : 0,\r
  "username" : "string",\r
  "firstName" : "string",\r
  "lastName" : "string",\r
  "email" : "string",\r
  "password" : "string",\r
  "phone" : "string",\r
  "userStatus" : 0\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="deleteUser" id="4f608834-b852-44cb-8110-3b073e5a6c52" method="DELETE">
        <con:description>This can only be done by the logged in user.
Delete user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="349a097d-f862-4c39-a485-30ae7afc8263" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/login" path="/user/login" id="943c5d5c-6e01-4e61-9e15-ea261412efb4">
      <con:settings/>
      <con:parameters/>
      <con:method name="loginUser" id="1a90d398-38d1-4f98-9047-1bb553bead88" method="GET">
        <con:description>Logs user into the system</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>username</con:name>
            <con:style>QUERY</con:style>
            <con:description>The user name for login</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>password</con:name>
            <con:style>QUERY</con:style>
            <con:description>The password for login in clear text</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>"string"</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:sampleContent>&lt;string>string&lt;/string></con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="b2b9cbf4-2dc6-49f5-9da8-57f1ccc70f2d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user/logout" path="/user/logout" id="d640c038-2b3b-47e9-8497-23bdb5f563e3">
      <con:settings/>
      <con:parameters/>
      <con:method name="logoutUser" id="cca4d628-24da-47c9-b4a0-a1a2bbe84d14" method="GET">
        <con:description>Logs out current logged in user session</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="e7300406-3337-4508-8904-05a605174992" mediaType="application/json">
          <con:settings/>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/user" path="/user" id="d2683da5-c52a-4bf0-add3-a89f2c0f83fa">
      <con:settings/>
      <con:parameters/>
      <con:method name="createUser" id="5033c876-4e89-412a-9ebd-2d54eea490fe" method="POST">
        <con:description>This can only be done by the logged in user.
Create user</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "id" : 0,
  "username" : "string",
  "firstName" : "string",
  "lastName" : "string",
  "email" : "string",
  "password" : "string",
  "phone" : "string",
  "userStatus" : 0
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
        </con:representation>
        <con:request name="Request 1" id="9318d494-9472-4cea-997f-e90fadc23875" mediaType="application/json" postQueryString="false">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>http://petstore.swagger.io</con:endpoint>
          <con:request>{\r
  "username" : "Swati",\r
  "firstName" : "string",\r
  "lastName" : "string",\r
  "email" : "string",\r
  "password" : "string",\r
  "phone" : "string",\r
  "userStatus" : 0\r
}</con:request>
          <con:originalUri>https://petstore.swagger.io/v2/user</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="0afd908f-90ce-42df-8a8f-331fd3e32094" name="Project 2 Test Suite 1">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="4edd0f99-8382-4442-960b-f5954af3bab8" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Project 2 Test Case 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="datasource" name="Data Source" id="6ffd8df4-2297-4bb6-a746-15d64f306146">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Excel">
            <con:configuration>
              <file>C:/Main CodeBase/readyapitest/swagger/logindata.xlsx</file>
              <worksheet/>
              <cell>A2</cell>
              <ignoreEmpty>false</ignoreEmpty>
              <evaluateFormulas>false</evaluateFormulas>
            </con:configuration>
          </con:dataSource>
          <con:shared>true</con:shared>
          <con:restartShared>true</con:restartShared>
          <con:property>name</con:property>
          <con:property>updated_username</con:property>
          <con:property>firstName</con:property>
          <con:property>lastName</con:property>
          <con:property>email</con:property>
          <con:property>password</con:property>
          <con:property>phone</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="post" id="41c9645d-6af7-4e86-9854-54435e52226b">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user" methodName="createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="post" id="9318d494-9472-4cea-997f-e90fadc23875" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request>{
  "username": "${Data Source#name}",
  "firstName": "string",
  "lastName": "string",
  "email": "string",
  "password": "string",
  "phone": "string",
  "userStatus": 0
}</con:request>
            <con:originalUri>https://petstore.swagger.io/v2/user</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="2464d158-467a-408a-a819-5ef40e77247c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="4d6d0d01-b7e9-46a6-8f71-08146c38fb7a" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>https://petstore.swagger.io/v2/swagger.json</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="8259dafa-90ff-46ff-9f2d-309c805539c9" name="Response SLA" disabled="true">
              <con:configuration>
                <SLA>2000</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="put" id="8c302073-11f5-402f-afd9-196a3c3d7051">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user/{username}" methodName="updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="put" id="7deeb334-846c-409d-80d7-561c11cff8bd" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request>{\r
  "username" : "${Data Source#updated_username}",\r
  "firstName" : "${Data Source#firstName}",\r
  "lastName" : "${Data Source#lastName}",\r
  "email" : "${Data Source#email}",\r
  "password" : "${Data Source#password}",\r
  "phone" : "${Data Source#phone}",\r
  "userStatus" : 0\r
}</con:request>
            <con:originalUri>https://petstore.swagger.io/v2/user/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="9ae00058-90dd-4d1c-9d38-0a2095d9daf0" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="username" value="${Data Source#name}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="getusername" id="c651f62b-bb05-4f53-a654-d1977857be45">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user/{username}" methodName="getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="getusername" id="9c3e2608-e48e-449c-8fb8-650601988891" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:originalUri>https://petstore.swagger.io/v2/user/Swati</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="8c4a41f9-d2bb-4e0e-ae94-21aca7c517a5" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="692359fb-7fd9-4b42-8416-ca2f41477572" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>https://petstore.swagger.io/v2/swagger.json</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="username" value="${Data Source#updated_username}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="login" id="66779ae0-e00b-4377-bc2f-30b519f30e46">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user/login" methodName="loginUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="login" id="b2b9cbf4-2dc6-49f5-9da8-57f1ccc70f2d" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:originalUri>https://petstore.swagger.io/v2/user/login</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d403681d-c18f-4cb5-908c-fcd998fdf8a9" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="30fa5af0-d43f-4864-ae82-53f8731104c6" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>https://petstore.swagger.io/v2/swagger.json</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="4527f484-ba83-47e3-a914-19ad59204550" name="Response SLA">
              <con:configuration>
                <SLA>2000</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="password" value="${/user/{username} GET Request 1#Response#$['password']}"/>
              <con:entry key="username" value="${getusername#Response#$['username']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="logout" id="21e7b742-6e66-46d8-888e-937bde59e24f">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user/logout" methodName="logoutUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="logout" id="e7300406-3337-4508-8904-05a605174992" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:originalUri>https://petstore.swagger.io/v2/user/logout</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="fe6c7b88-b77f-4456-9278-7d2275ea9231" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="91dca0cc-a4de-4409-931f-79d59ae67b95" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>https://petstore.swagger.io/v2/swagger.json</swaggerUrl>
                <strictMode>true</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="7776da5e-a0c0-4ce0-ab8a-49afcffd22d0" name="Response SLA">
              <con:configuration>
                <SLA>2000</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="delete" id="78e5b005-7a15-4cb0-b2a1-84afb07ef879">
        <con:settings/>
        <con:config service="Swagger Petstore" resourcePath="/v2/user/{username}" methodName="deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="delete" id="349a097d-f862-4c39-a485-30ae7afc8263" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:originalUri>https://petstore.swagger.io/v2/user/%20GET%20Request%201%23Response%23%24%5B%27username%27%5D%7D</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="ae626901-2074-441b-9333-a68b459a77f1" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200,201</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SwaggerComplianceAssertion" id="1c04b3a8-c0a9-4dc1-a421-5cb630c584ce" name="Swagger Compliance Assertion">
              <con:configuration>
                <swaggerUrl>https://petstore.swagger.io/v2/swagger.json</swaggerUrl>
                <strictMode>false</strictMode>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Response SLA Assertion" id="6f72ae64-822b-4f4a-b411-f68d90d91113" name="Response SLA" disabled="true">
              <con:configuration>
                <SLA>1500</SLA>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="username" value="${Data Source#updated_username}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="datasink" name="Data Sink" id="aac891a6-50db-451a-bbf0-ee2e2f81996c">
        <con:settings/>
        <con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSink type="Excel">
            <con:configuration>
              <file/>
              <outfile>C:/Main CodeBase/readyapitest/swagger/logindata.xlsx</outfile>
              <worksheet>Sheet1</worksheet>
              <cell>H2</cell>
              <evaluateFormulas>true</evaluateFormulas>
              <append>false</append>
            </con:configuration>
          </con:dataSink>
          <con:properties>
            <con:property>
              <con:name>post_reponse</con:name>
              <con:value>${post#Response#$['code']}</con:value>
            </con:property>
            <con:property>
              <con:name>put_reponse</con:name>
              <con:value>${put#Response#$['code']}</con:value>
            </con:property>
            <con:property>
              <con:name>getusername_response</con:name>
              <con:value>${getusername#Response#$['username']}</con:value>
            </con:property>
            <con:property>
              <con:name>loginresponse</con:name>
              <con:value>${login#Response#$['code']}</con:value>
            </con:property>
            <con:property>
              <con:name>logout response</con:name>
              <con:value>${logout#Response#$['code']}</con:value>
            </con:property>
            <con:property>
              <con:name>deleteresponse</con:name>
              <con:value>${delete#Response#$['code']}</con:value>
            </con:property>
          </con:properties>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="Data Source Loop" id="f6533167-964d-4003-9dc8-a19ab915c31a">
        <con:settings/>
        <con:config>
          <dataSourceStep>Data Source</dataSourceStep>
          <targetStep>/user POST Request 1</targetStep>
          <discardResults>true</discardResults>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
